import mongoose from 'mongoose';
import Notification from '../models/Notification.js';

// Connect to MongoDB and clean all fake notifications
async function cleanFakeNotifications() {
  try {
    console.log('üßπ Cleaning up fake notifications...\n');
    
    // Connect to database
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://127.0.0.1:27017/excelAnalytics');
    console.log('‚úÖ Connected to MongoDB');
    
    // Count existing notifications
    const totalBefore = await Notification.countDocuments();
    console.log(`üìä Total notifications before cleanup: ${totalBefore}`);
    
    // Remove all existing notifications since they are from testing/seeding
    const result = await Notification.deleteMany({});
    console.log(`üóëÔ∏è  Removed ${result.deletedCount} fake notifications`);
    
    // Verify cleanup
    const totalAfter = await Notification.countDocuments();
    console.log(`üìä Total notifications after cleanup: ${totalAfter}`);
    
    console.log('\n‚úÖ Database cleaned successfully!');
    console.log('üéØ From now on, notifications will only be generated from real user activities:');
    console.log('   - User registration ‚Üí Welcome notification');
    console.log('   - File upload ‚Üí Processing notification');
    console.log('   - Analysis completion ‚Üí Results ready notification');
    console.log('   - Profile updates ‚Üí Confirmation notification');
    console.log('   - Admin requests ‚Üí Admin notification');
    console.log('   - Authentication events ‚Üí Security notifications');
    
  } catch (error) {
    console.error('‚ùå Error cleaning notifications:', error);
  } finally {
    await mongoose.connection.close();
    console.log('üîå Database connection closed');
  }
}

// Run the cleanup
cleanFakeNotifications();
